#!(generic "foo")
###############################################################################
# filter.fo
#
# The Programmer - Leevi, @2013-02-03.
# C-Lab, Nirl Studio 2011-2013, All Rights Reserved.
#
###############################################################################
# 0, to define and implement operations of 'filter'.
($impl filter
    # 1, the constructor of 'filter'.
    (filter (= (! src:iterator test:function) ?filter (*
        (decl src (:_find_next test src -) 
        (if (src:is_not null)
            (impl (this:iterator (src:item))
                (_src  src)
                (_test test)
    -)
    #
    (:next (= ?filter
        (filter (:_src:next ) :_test -)
    -)
    #
    ($next (= ?filter (*
        (decl src (:_find_next :_test (&:_src:next -)
        (if (src:is_not null)
            (impl (this:iterator (src:item ))
                (_src  src)
    -)
    #
    (_find_next (= (! test iter)
        (with iter (while (last:is_not null)
            (if (test (last:item ))
                (return last)
             else
                (&last:next )
    -)
    #
) ;
###############################################################################
