#!(generic "foo")
###############################################################################
# seqn.fo
#
# The Programmer - Leevi, @2012-06-24. Happy Birthday.
# C-Lab, Nirl Studio 2011-2013, All Rights Reserved.
#
###############################################################################
# 0, to define and implement of 'seqn'.
($impl seqn
    # 1, the constructor of seqn.
    (seqn  (= (! count:int?0 start:numeric?0 step:numeric?1) 
        (if ((count:gt 0):and (step:neq 0))
            (&impl this
                (:_count    count)
                (:_current  start)
                (:_step     step)
    -)
    #
    (:rest  (= ?int (return :_count -)
    #
    (:item  (= ?numeric (return :_current -)
    #
    (:next  (= ?seqn
        (if (:_count:gt 1)
            (seqn (:_count:sub ) (:_current:add step) :_step
    -)
    #
    ($next  (= ?seqn
        (if (:_count:gt 1) 
            (&impl this
                (:_count    (&:_count:sub -)
                (:_current  (&:_current:add :_step -)
    -)
);
###############################################################################
