#!(generic "foo")
###############################################################################
# seqn.fo
#
# The Programmer - Leevi, @2012-06-24. Happy Birthday.
# C-Lab, Nirl Studio 2011-2013, All Rights Reserved.
#
###############################################################################
# 0, to define and implement of 'seqn'.
($impl seqn
    # 1, the constructor of seqn.
    (seqn  (= (! count:int?0 start:numeric?0 step:numeric?1) 
        (if ((count:gt 0):and (step:neq 0))
            (impl 
              (this:slicer count start)
                (:_step     step)
    -)
    (of (= (! from:numeric?0 to:numeric?0 step:numeric?1) (*
        (decl count (to:sub from -)
        (if ((count:neq 0):and (step:neq 0)) (*
            (if ((count:mul step):lt 0) ($step:neg -)
            (seqn ((count:abs ):add ) from step -)
    -)
    #
    (:next  (= ?seqn
        (if (:_rest:gt 1)
            (seqn (:_rest:sub ) (:_item:add step) :_step
    -)
    #
    ($next  (= ?seqn
        (if (:_rest:gt 1) 
            (this:slicer (&:_rest:sub -) (&:_item:add :_step -)
    -)
);
###############################################################################
