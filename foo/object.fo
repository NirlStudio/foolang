#!(generic "foo")
###############################################################################
# object.fo
#
# The Programmer - Leevi, @2012-06-24. Happy Birthday.
# C-Lab, Nirl Studio 2011-2013, All Rights Reserved.
#
###############################################################################
# 0, to define and implement some generic operations of 'object'.
# 0.0, in theory, an 'object' is an immutable entity after it has been created.
($impl object 
    # 1, fundamental operations.
    # 1.0, 'class' return the type of this object.
    (class (= ?class -)
    # 1.1, an 'object' can be cloned to another one .
    # 1.2, by default, the 'clone' is an shallow copy opertion.
    (clone (= ?object -)
    # 1.3, 'equal' defines an equivalency relationship between objects.
    # 1.4, an 'object' is identically equivalent to itself.
    # 1.5, two objects without a shared ancestor are identically unequal.
    (equal (= (! other:object) ?bool -)
    # 1.6, 'not_equal' is equivalent to '(not (obj:equal other))'. 
    (not_equal (= (! other:object) ?bool -)
);
###############################################################################
