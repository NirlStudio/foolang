#!(generic "foo")
###############################################################################
# list.fo
#
# The Programmer - Leevi, @2012-06-24. Happy Birthday. Updated @2013-01-15.
# C-Lab, Nirl Studio 2011-2013, All Rights Reserved.
#
###############################################################################
# 0, to implement operations of 'list'.
(impl list
    # 1, the constructors of 'list'.
    # 1.0, 'list' will produce an instance including all items in arguments.
    (list (= (! item *) ?list ,
    # 1.1, 'of' will produce an instance basing one or more iterable entity.
    # 1.2, 'items' may be an 'iterator', 'slicer', 'iterable' or 'sliceable' entity.
    (of (= (! items:iterator|iterable *) ?list ,
) ;
###############################################################################
# 2, to define a shortcut function for 'list:of'.
(decl list_of list:of) ;
###############################################################################
