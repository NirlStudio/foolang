#!foo
###############################################################################
# enum.foo
#
# The Programmer - Leevi, @2013-02-03.
# C-Lab, Nirl Studio 2011-2013, All Rights Reserved.
#
###############################################################################
(decl :to_name (= (! value:enum) ?string
    (if (value:is_object int)
        (foreach name in this:Names
            (if (:@name:eq value)
                (return name)
);
###############################################################################
(decl :to_value (= (! name:string) ?enum
    (if (name:not_empty )
        returns :@name
);
###############################################################################
(decl :to_names (= (! values:enum) ?array
    (if (values:is_object int) 
        returns (array:of string (:Names:items
                    (= (! name) (values:band :@name)
);
###############################################################################
(decl :to_values (= (! names:iterator|iterable) ?enum
    (if (names:as iterator) 
        (foreach name in names (using (value this:@name)
            (if (value:is_object int)
                saves (last:bor value)
            else
                saves last
        -)
    else
        (if (names:as iterable)
            returns (self (names:items *)
        -)
);
###############################################################################
