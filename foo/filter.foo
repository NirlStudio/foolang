#!foo
###############################################################################
# filter.foo
#
# The Programmer - Leevi, @2013-02-03. Updated @2013-02-08.
# C-Lab, Nirl Studio 2011-2013, All Rights Reserved.
#
###############################################################################
(decl :filter (= (! src:iterator test:function) ?filter
(*
    (decl :_src src)
    (decl :_test test)
) ;
###############################################################################
(decl :next (= ?filter
    (for (decl nxt (:_src:next *)) (nxt:as iterator) (nxt:$next *)
        (if (:_test (nxt:item *)) 
            (return (filter nxt :_test)
) ;
###############################################################################
(decl :item (= ?* 
    returns :_src:item
) ;
###############################################################################
(decl $next (= ?bool
(using
    (nxt (:_src:next *) ,
    (decl :_src (while (nxt:as iterator)
            (if (this:_test (nxt:item *))
                (break nxt)
            else
                (nxt:$next *)
) ;
###############################################################################
